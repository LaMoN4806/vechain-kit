/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SubdomainClaimer,
  SubdomainClaimerInterface,
} from "../../contracts/SubdomainClaimer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "contract PublicResolver",
        name: "resolver",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ens",
    outputs: [
      {
        internalType: "contract ENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ENS",
        name: "ensAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolveUtilsAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_domainName",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "node",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516119206100fd60003960008181610a9d01528181610ac60152610c0c01526119206000f3fe6080604052600436106100a75760003560e01c8063715018a611610064578063715018a614610194578063895d7386146101a95780638da5cb5b146101be578063ad3cb1cc146101fb578063d70754ec1461022c578063f2fde38b1461024257600080fd5b80633f15457f146100ac5780634571e3a6146100e95780634f1ef2861461010b57806352d1902d1461011e57806354fd4d501461014157806360a1da8314610174575b600080fd5b3480156100b857600080fd5b506000546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f557600080fd5b506101096101043660046112ca565b610262565b005b61010961011936600461132c565b61044f565b34801561012a57600080fd5b5061013361046e565b6040519081526020016100e0565b34801561014d57600080fd5b506040805180820190915260018152603160f81b60208201525b6040516100e091906113b4565b34801561018057600080fd5b5061010961018f3660046113e7565b61048b565b3480156101a057600080fd5b506101096108b3565b3480156101b557600080fd5b506101676108c7565b3480156101ca57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166100cc565b34801561020757600080fd5b50610167604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561023857600080fd5b5061013360025481565b34801561024e57600080fd5b5061010961025d366004611439565b610955565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156102a85750825b905060008267ffffffffffffffff1660011480156102c55750303b155b9050811580156102d3575080155b156102f15760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561031b57845460ff60401b1916600160401b1785555b61032433610993565b61032c6109a4565b600080546001600160a01b03808b166001600160a01b03199283161790925560018054928a1692909116919091179055600361036887826114de565b506103fc6003805461037990611456565b80601f01602080910402602001604051908101604052809291908181526020018280546103a590611456565b80156103f25780601f106103c7576101008083540402835291602001916103f2565b820191906000526020600020905b8154815290600101906020018083116103d557829003601f168201915b50505050506109ac565b600255831561044557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b610457610a92565b61046082610b37565b61046a8282610b3f565b5050565b6000610478610c01565b506000805160206118cb83398151915290565b6040805160018082528183019092526000916020808301908036833701905050905033816000815181106104c1576104c161159e565b6001600160a01b0392831660209182029290920101526001546040516332fe2d9b60e21b8152600092919091169063cbf8b66c906105039085906004016115b4565b6000604051808303816000875af1158015610522573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261054a9190810190611601565b9050600181511015801561057e575061057c8160008151811061056f5761056f61159e565b6020026020010151610c4a565b155b6105e75760405162461bcd60e51b815260206004820152602f60248201527f4120646f6d61696e20697320616c7265616479206173736f636961746564207460448201526e37903cb7bab91030b2323932b9b99760891b60648201526084015b60405180910390fd5b600084805190602001209050600060025482604051602001610613929190918252602082015260400190565b60408051808303601f19018152908290528051602090910120600054631ef3fca760e31b8352600483018290529092506001600160a01b03169063f79fe53890602401602060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106979190611700565b156106e45760405162461bcd60e51b815260206004820152601a60248201527f537562646f6d61696e20616c726561647920636c61696d65642e00000000000060448201526064016105de565b6000546002546040516306ab592360e01b81526004810191909152602481018490523060448201526001600160a01b03909116906306ab5923906064016020604051808303816000875af1158015610740573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107649190611722565b50600054604051630c4b7b8560e11b8152600481018390526001600160a01b03878116602483015290911690631896f70a90604401600060405180830381600087803b1580156107b357600080fd5b505af11580156107c7573d6000803e3d6000fd5b505060405162d5fa2b60e81b8152600481018490523360248201526001600160a01b038816925063d5fa2b009150604401600060405180830381600087803b15801561081257600080fd5b505af1158015610826573d6000803e3d6000fd5b50506000546002546040516306ab592360e01b81526004810191909152602481018690523360448201526001600160a01b0390911692506306ab592391506064016020604051808303816000875af1158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa9190611722565b50505050505050565b6108bb610d4d565b6108c56000610da8565b565b600380546108d490611456565b80601f016020809104026020016040519081016040528092919081815260200182805461090090611456565b801561094d5780601f106109225761010080835404028352916020019161094d565b820191906000526020600020905b81548152906001019060200180831161093057829003601f168201915b505050505081565b61095d610d4d565b6001600160a01b03811661098757604051631e4fbdf760e01b8152600060048201526024016105de565b61099081610da8565b50565b61099b610e19565b61099081610e62565b6108c5610e19565b6000806109e08360408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b60408051808201825260018152601760f91b60208083019182528351808501855260008082529082018190528451808601865293518452838201929092528351808501909452818452830152919250610a3a838383610e6a565b505b805115610a8a578051602082015120849060408051602081019390935282015260600160408051601f1981840301815291905280516020909101209350610a84838383610e6a565b50610a3c565b505050919050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610b1957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b0d6000805160206118cb833981519152546001600160a01b031690565b6001600160a01b031614155b156108c55760405163703e46dd60e11b815260040160405180910390fd5b610990610d4d565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b99575060408051601f3d908101601f19168201909252610b9691810190611722565b60015b610bc157604051634c9c8ce360e01b81526001600160a01b03831660048201526024016105de565b6000805160206118cb8339815191528114610bf257604051632a87526960e21b8152600481018290526024016105de565b610bfc8383610f03565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108c55760405163703e46dd60e11b815260040160405180910390fd5b8051600090819081905b80821015610d44576000858381518110610c7057610c7061159e565b01602001516001600160f81b0319169050600160ff1b811015610c9f57610c98600184611751565b9250610d31565b600760fd1b6001600160f81b031982161015610cc057610c98600284611751565b600f60fc1b6001600160f81b031982161015610ce157610c98600384611751565b601f60fb1b6001600160f81b031982161015610d0257610c98600484611751565b603f60fa1b6001600160f81b031982161015610d2357610c98600584611751565b610d2e600684611751565b92505b5082610d3c81611764565b935050610c54565b50909392505050565b33610d7f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108c55760405163118cdaa760e01b81523360048201526024016105de565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166108c557604051631afcd79f60e31b815260040160405180910390fd5b61095d610e19565b60408051808201909152600080825260208201526000610e9c8560000151866020015186600001518760200151610f59565b6020808501829052860151909150610eb4908261177d565b8551610ec0919061177d565b835260208501518103610ed65760008552610ef7565b83518351610ee49190611751565b85518690610ef390839061177d565b9052505b829150505b9392505050565b610f0c82611067565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610f5157610bfc82826110cc565b61046a611144565b60008085841161105a57602084116110065760006001610f7a86602061177d565b610f85906008611790565b610f9090600261188b565b610f9a919061177d565b845190199150811685610fad8989611751565b610fb7919061177d565b805190935082165b818114610ff157878411610fd9578794505050505061105f565b83610fe381611897565b945050828451169050610fbf565b610ffb8785611751565b94505050505061105f565b838320611013858861177d565b61101d9087611751565b91505b858210611058578482208082036110455761103b8684611751565b935050505061105f565b61105060018461177d565b925050611020565b505b849150505b949350505050565b806001600160a01b03163b60000361109d57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016105de565b6000805160206118cb83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516110e991906118ae565b600060405180830381855af49150503d8060008114611124576040519150601f19603f3d011682016040523d82523d6000602084013e611129565b606091505b5091509150611139858383611163565b925050505b92915050565b34156108c55760405163b398979f60e01b815260040160405180910390fd5b60608261117857611173826111bf565b610efc565b815115801561118f57506001600160a01b0384163b155b156111b857604051639996b31560e01b81526001600160a01b03851660048201526024016105de565b5080610efc565b8051156111cf5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b038116811461099057600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561123c5761123c6111fd565b604052919050565b600067ffffffffffffffff82111561125e5761125e6111fd565b50601f01601f191660200190565b600061127f61127a84611244565b611213565b905082815283838301111561129357600080fd5b828260208301376000602084830101529392505050565b600082601f8301126112bb57600080fd5b610efc8383356020850161126c565b6000806000606084860312156112df57600080fd5b83356112ea816111e8565b925060208401356112fa816111e8565b9150604084013567ffffffffffffffff81111561131657600080fd5b611322868287016112aa565b9150509250925092565b6000806040838503121561133f57600080fd5b823561134a816111e8565b9150602083013567ffffffffffffffff81111561136657600080fd5b8301601f8101851361137757600080fd5b6113868582356020840161126c565b9150509250929050565b60005b838110156113ab578181015183820152602001611393565b50506000910152565b60208152600082518060208401526113d3816040850160208701611390565b601f01601f19169190910160400192915050565b600080604083850312156113fa57600080fd5b823567ffffffffffffffff81111561141157600080fd5b61141d858286016112aa565b925050602083013561142e816111e8565b809150509250929050565b60006020828403121561144b57600080fd5b8135610efc816111e8565b600181811c9082168061146a57607f821691505b60208210810361148a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610bfc57600081815260208120601f850160051c810160208610156114b75750805b601f850160051c820191505b818110156114d6578281556001016114c3565b505050505050565b815167ffffffffffffffff8111156114f8576114f86111fd565b61150c816115068454611456565b84611490565b602080601f83116001811461154157600084156115295750858301515b600019600386901b1c1916600185901b1785556114d6565b600085815260208120601f198616915b8281101561157057888601518255948401946001909101908401611551565b508582101561158e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156115f55783516001600160a01b0316835292840192918401916001016115d0565b50909695505050505050565b6000602080838503121561161457600080fd5b825167ffffffffffffffff8082111561162c57600080fd5b818501915085601f83011261164057600080fd5b815181811115611652576116526111fd565b8060051b611661858201611213565b918252838101850191858101908984111561167b57600080fd5b86860192505b838310156116f3578251858111156116995760008081fd5b8601603f81018b136116ab5760008081fd5b8781015160406116bd61127a83611244565b8281528d828486010111156116d25760008081fd5b6116e1838c8301848701611390565b85525050509186019190860190611681565b9998505050505050505050565b60006020828403121561171257600080fd5b81518015158114610efc57600080fd5b60006020828403121561173457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561113e5761113e61173b565b6000600182016117765761177661173b565b5060010190565b8181038181111561113e5761113e61173b565b808202811582820484141761113e5761113e61173b565b600181815b808511156117e25781600019048211156117c8576117c861173b565b808516156117d557918102915b93841c93908002906117ac565b509250929050565b6000826117f95750600161113e565b816118065750600061113e565b816001811461181c576002811461182657611842565b600191505061113e565b60ff8411156118375761183761173b565b50506001821b61113e565b5060208310610133831016604e8410600b8410161715611865575081810a61113e565b61186f83836117a7565b80600019048211156118835761188361173b565b029392505050565b6000610efc83836117ea565b6000816118a6576118a661173b565b506000190190565b600082516118c0818460208701611390565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220cc67d19a0f85d1c3ebf523f696f67a47c7ab12d83f501d7c7c76be9180af3cc964736f6c63430008140033";

type SubdomainClaimerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubdomainClaimerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubdomainClaimer__factory extends ContractFactory {
  constructor(...args: SubdomainClaimerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SubdomainClaimer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SubdomainClaimer__factory {
    return super.connect(runner) as SubdomainClaimer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubdomainClaimerInterface {
    return new Interface(_abi) as SubdomainClaimerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SubdomainClaimer {
    return new Contract(address, _abi, runner) as unknown as SubdomainClaimer;
  }
}
