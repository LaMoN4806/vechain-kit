/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SimpleAccount,
  SimpleAccountInterface,
} from "../../../contracts/accounts/SimpleAccount";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "StringsInsufficientHexLength",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "validAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validBefore",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "nonce",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "executeBatchWithAuthorization",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validBefore",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "executeWithAuthorization",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedNonces",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000775760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516124ea6200010460003960008181610d0501528181610d2e0152610e6e01526124ea6000f3fe6080604052600436106100d25760003560e01c806301ffc9a7146100de578063150b7a0214610113578063275573541461015857806347e1da2a1461016d5780634f1ef2861461018d57806352d1902d146101a057806354fd4d50146101c357806384b0196e146101d75780638da5cb5b146101ff578063a5cb68e71461022c578063ad3cb1cc1461023f578063b61d27f61461027d578063bc197c811461029d578063c4d66de8146102cc578063f23a6e61146102ec578063f2fde38b14610319578063feb617241461033957600080fd5b366100d957005b600080fd5b3480156100ea57600080fd5b506100fe6100f93660046119fb565b610369565b60405190151581526020015b60405180910390f35b34801561011f57600080fd5b5061013f61012e366004611a89565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161010a565b61016b610166366004611af7565b6103bb565b005b34801561017957600080fd5b5061016b610188366004611bd7565b610416565b61016b61019b366004611c86565b6105ad565b3480156101ac57600080fd5b506101b56105cc565b60405190815260200161010a565b3480156101cf57600080fd5b5060036101b5565b3480156101e357600080fd5b506101ec6105e9565b60405161010a9796959493929190611d97565b34801561020b57600080fd5b5060005461021f906001600160a01b031681565b60405161010a9190611e2d565b61016b61023a366004611e41565b610692565b34801561024b57600080fd5b50610270604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161010a9190611f25565b34801561028957600080fd5b5061016b610298366004611f38565b610848565b3480156102a957600080fd5b5061013f6102b8366004611f91565b63bc197c8160e01b98975050505050505050565b3480156102d857600080fd5b5061016b6102e736600461202a565b610897565b3480156102f857600080fd5b5061013f610307366004612045565b63f23a6e6160e01b9695505050505050565b34801561032557600080fd5b5061016b61033436600461202a565b6109d8565b34801561034557600080fd5b506100fe6103543660046120aa565b60016020526000908152604090205460ff1681565b60006001600160e01b03198216630a85bd0160e11b148061039a57506001600160e01b03198216630271189760e51b145b806103b557506001600160e01b031982166301ffc9a760e01b145b92915050565b6103cb8888888888888888610aa7565b61040c888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c2792505050565b5050505050505050565b61041e610c9e565b8481148015610434575082158061043457508281145b61047b5760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60008390036105315760005b8581101561052b576105198787838181106104a4576104a46120c3565b90506020020160208101906104b9919061202a565b60008585858181106104cd576104cd6120c3565b90506020028101906104df91906120d9565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c2792505050565b8061052381612135565b915050610487565b506105a5565b60005b858110156105a357610591878783818110610551576105516120c3565b9050602002016020810190610566919061202a565b868684818110610578576105786120c3565b905060200201358585858181106104cd576104cd6120c3565b8061059b81612135565b915050610534565b505b505050505050565b6105b5610cfa565b6105be82610d9f565b6105c88282610daa565b5050565b60006105d6610e63565b5060008051602061249583398151915290565b60006060806000806000606060006105ff610eac565b805490915015801561061357506001810154155b6106575760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610472565b61065f610ed0565b610667610f71565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b89881480156106a057508786145b6106e55760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f240d8cadccee8d0e640dad2e6dac2e8c6d60531b6044820152606401610472565b60008381526001602052604090205460ff161561075e5760405162461bcd60e51b815260206004820152603160248201527f4e6f6e636520616c726561647920757365642c20706c65617365207369676e2060448201527030903732bb903a3930b739b0b1ba34b7b760791b6064820152608401610472565b84421161077d5760405162461bcd60e51b81526004016104729061214e565b83421061079c5760405162461bcd60e51b815260040161047290612183565b6107af8b8b8b8b8b8b8b8b8b8b8b610f8e565b60008381526001602081905260408220805460ff191690911790555b8a81101561083a576108288c8c838181106107e8576107e86120c3565b90506020020160208101906107fd919061202a565b8b8b8481811061080f5761080f6120c3565b905060200201358a8a858181106104cd576104cd6120c3565b8061083281612135565b9150506107cb565b505050505050505050505050565b610850610c9e565b610891848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c2792505050565b50505050565b60006108a16111fc565b805490915060ff600160401b82041615906001600160401b03166000811580156108c85750825b90506000826001600160401b031660011480156108e45750303b155b9050811580156108f2575080155b156109105760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b0319166001178555831561093957845460ff60401b1916600160401b1785555b61094286611220565b6109836040518060400160405280600681526020016515d85b1b195d60d21b815250604051806040016040528060018152602001603160f81b815250611268565b61098b61127a565b83156105a557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b6109e0611282565b6001600160a01b038116610a4c5760405162461bcd60e51b815260206004820152602d60248201527f43616e6e6f74207472616e73666572206f776e65727368697020746f2074686560448201526c207a65726f206164647265737360981b6064820152608401610472565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b834211610ac65760405162461bcd60e51b81526004016104729061214e565b824210610ae55760405162461bcd60e51b815260040161047290612183565b60007f7032ab04021a3b51f8b532963600986c79192b2787e1b469d2ea7458cf9d8f4489898989604051610b1a9291906121b2565b604051908190038120610b62949392918a908a906020019586526001600160a01b0394909416602086015260408501929092526060840152608083015260a082015260c00190565b6040516020818303038152906040528051906020012090506000610b85826112d3565b90506000610bc98286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061130092505050565b6000549091506001600160a01b03808316911614610c1a5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b4b3b732b960911b6044820152606401610472565b5050505050505050505050565b600080846001600160a01b03168484604051610c4391906121c2565b60006040518083038185875af1925050503d8060008114610c80576040519150601f19603f3d011682016040523d82523d6000602084013e610c85565b606091505b509150915081610c9757805160208201fd5b5050505050565b6000546001600160a01b03163314610cf85760405162461bcd60e51b815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152606401610472565b565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610d8157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d75600080516020612495833981519152546001600160a01b031690565b6001600160a01b031614155b15610cf85760405163703e46dd60e11b815260040160405180910390fd5b610da7611282565b50565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e04575060408051601f3d908101601f19168201909252610e01918101906121de565b60015b610e235781604051634c9c8ce360e01b81526004016104729190611e2d565b6000805160206124958339815191528114610e5457604051632a87526960e21b815260048101829052602401610472565b610e5e838361132a565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cf85760405163703e46dd60e11b815260040160405180910390fd5b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10090565b60606000610edc610eac565b9050806002018054610eed906121f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610f19906121f7565b8015610f665780601f10610f3b57610100808354040283529160200191610f66565b820191906000526020600020905b815481529060010190602001808311610f4957829003601f168201915b505050505091505090565b60606000610f7d610eac565b9050806003018054610eed906121f7565b7f24e050e6ace9da3038da725c9e2e0d147f1ce07d2ba428f0d664d638abd37d6a6000876001600160401b03811115610fc957610fc9611c70565b604051908082528060200260200182016040528015610ff2578160200160208202803683370190505b50905060005b8881101561106957898982818110611012576110126120c3565b905060200281019061102491906120d9565b6040516110329291906121b2565b604051809103902082828151811061104c5761104c6120c3565b60209081029190910101528061106181612135565b915050610ff8565b506000828e8e604051602001611080929190612231565b604051602081830303815290604052805190602001208d8d6040516020016110a9929190612271565b60405160208183030381529060405280519060200120846040516020016110d0919061229a565b60408051601f198184030181528282528051602091820120908301959095528101929092526060820152608081019190915260a0810189905260c0810188905260e0810187905261010001604051602081830303815290604052805190602001209050600061113e826112d3565b905060006111828288888080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061130092505050565b6000549091506001600160a01b038083169116908114906111a290611380565b6111ab83611380565b6040516020016111bc9291906122d0565b604051602081830303815290604052906111e95760405162461bcd60e51b81526004016104729190611f25565b5050505050505050505050505050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090565b600080546001600160a01b0319166001600160a01b038316908117825560405190917fa4f865ec1c93024a9bafa691bc233679a98c0463a09d0a4c5360b91642f3114591a250565b611270611396565b6105c882826113bb565b610cf8611396565b6000546001600160a01b031633148061129a57503330145b610cf85760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606401610472565b60006103b56112e06113fc565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080611310868661140b565b9250925092506113208282611458565b5090949350505050565b61133382611511565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561137857610e5e828261156d565b6105c86115e3565b60606103b56001600160a01b0383166014611602565b61139e611781565b610cf857604051631afcd79f60e31b815260040160405180910390fd5b6113c3611396565b60006113cd610eac565b9050600281016113dd848261237e565b50600381016113ec838261237e565b5060008082556001909101555050565b600061140661179b565b905090565b600080600083516041036114455760208401516040850151606086015160001a6114378882858561180f565b955095509550505050611451565b50508151600091506002905b9250925092565b600082600381111561146c5761146c61243d565b03611475575050565b60018260038111156114895761148961243d565b036114a75760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156114bb576114bb61243d565b036114dc5760405163fce698f760e01b815260048101829052602401610472565b60038260038111156114f0576114f061243d565b036105c8576040516335e2f38360e21b815260048101829052602401610472565b806001600160a01b03163b60000361153e5780604051634c9c8ce360e01b81526004016104729190611e2d565b60008051602061249583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161158a91906121c2565b600060405180830381855af49150503d80600081146115c5576040519150601f19603f3d011682016040523d82523d6000602084013e6115ca565b606091505b50915091506115da8583836118d4565b95945050505050565b3415610cf85760405163b398979f60e01b815260040160405180910390fd5b6060826000611612846002612453565b61161d90600261246a565b6001600160401b0381111561163457611634611c70565b6040519080825280601f01601f19166020018201604052801561165e576020820181803683370190505b509050600360fc1b81600081518110611679576116796120c3565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106116a8576116a86120c3565b60200101906001600160f81b031916908160001a90535060006116cc856002612453565b6116d790600161246a565b90505b600181111561174f576f181899199a1a9b1b9c1cb0b131b232b360811b83600f166010811061170b5761170b6120c3565b1a60f81b828281518110611721576117216120c3565b60200101906001600160f81b031916908160001a90535060049290921c916117488161247d565b90506116da565b5081156117795760405163e22e27eb60e01b81526004810186905260248101859052604401610472565b949350505050565b600061178b6111fc565b54600160401b900460ff16919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6117c661192a565b6117ce611991565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0384111561184057506000915060039050826118ca565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611894573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118c0575060009250600191508290506118ca565b9250600091508190505b9450945094915050565b6060826118e9576118e4826119d2565b611923565b815115801561190057506001600160a01b0384163b155b156119205783604051639996b31560e01b81526004016104729190611e2d565b50805b9392505050565b600080611935610eac565b90506000611941610ed0565b80519091501561195957805160209091012092915050565b81548015611968579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b60008061199c610eac565b905060006119a8610f71565b8051909150156119c057805160209091012092915050565b60018201548015611968579392505050565b8051156119e25780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b600060208284031215611a0d57600080fd5b81356001600160e01b03198116811461192357600080fd5b80356001600160a01b0381168114611a3c57600080fd5b919050565b60008083601f840112611a5357600080fd5b5081356001600160401b03811115611a6a57600080fd5b602083019150836020828501011115611a8257600080fd5b9250929050565b600080600080600060808688031215611aa157600080fd5b611aaa86611a25565b9450611ab860208701611a25565b93506040860135925060608601356001600160401b03811115611ada57600080fd5b611ae688828901611a41565b969995985093965092949392505050565b60008060008060008060008060c0898b031215611b1357600080fd5b611b1c89611a25565b97506020890135965060408901356001600160401b0380821115611b3f57600080fd5b611b4b8c838d01611a41565b909850965060608b0135955060808b0135945060a08b0135915080821115611b7257600080fd5b50611b7f8b828c01611a41565b999c989b5096995094979396929594505050565b60008083601f840112611ba557600080fd5b5081356001600160401b03811115611bbc57600080fd5b6020830191508360208260051b8501011115611a8257600080fd5b60008060008060008060608789031215611bf057600080fd5b86356001600160401b0380821115611c0757600080fd5b611c138a838b01611b93565b90985096506020890135915080821115611c2c57600080fd5b611c388a838b01611b93565b90965094506040890135915080821115611c5157600080fd5b50611c5e89828a01611b93565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611c9957600080fd5b611ca283611a25565b915060208301356001600160401b0380821115611cbe57600080fd5b818501915085601f830112611cd257600080fd5b813581811115611ce457611ce4611c70565b604051601f8201601f19908116603f01168101908382118183101715611d0c57611d0c611c70565b81604052828152886020848701011115611d2557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b83811015611d62578181015183820152602001611d4a565b50506000910152565b60008151808452611d83816020860160208601611d47565b601f01601f19169290920160200192915050565b60ff60f81b881681526000602060e081840152611db760e084018a611d6b565b8381036040850152611dc9818a611d6b565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611e1b57835183529284019291840191600101611dff565b50909c9b505050505050505050505050565b6001600160a01b0391909116815260200190565b600080600080600080600080600080600060e08c8e031215611e6257600080fd5b6001600160401b038c35811015611e7857600080fd5b611e858e8e358f01611b93565b909c509a5060208d0135811015611e9b57600080fd5b611eab8e60208f01358f01611b93565b909a50985060408d0135811015611ec157600080fd5b611ed18e60408f01358f01611b93565b909850965060608d0135955060808d0135945060a08d0135935060c08d0135811015611efc57600080fd5b50611f0d8d60c08e01358e01611a41565b81935080925050509295989b509295989b9093969950565b6020815260006119236020830184611d6b565b60008060008060608587031215611f4e57600080fd5b611f5785611a25565b93506020850135925060408501356001600160401b03811115611f7957600080fd5b611f8587828801611a41565b95989497509550505050565b60008060008060008060008060a0898b031215611fad57600080fd5b611fb689611a25565b9750611fc460208a01611a25565b965060408901356001600160401b0380821115611fe057600080fd5b611fec8c838d01611b93565b909850965060608b013591508082111561200557600080fd5b6120118c838d01611b93565b909650945060808b0135915080821115611b7257600080fd5b60006020828403121561203c57600080fd5b61192382611a25565b60008060008060008060a0878903121561205e57600080fd5b61206787611a25565b955061207560208801611a25565b9450604087013593506060870135925060808701356001600160401b0381111561209e57600080fd5b611c5e89828a01611a41565b6000602082840312156120bc57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126120f057600080fd5b8301803591506001600160401b0382111561210a57600080fd5b602001915036819003821315611a8257600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016121475761214761211f565b5060010190565b6020808252601b908201527a105d5d1a1bdc9a5e985d1a5bdb881b9bdd081e595d081d985b1a59602a1b604082015260600190565b602080825260159082015274105d5d1a1bdc9a5e985d1a5bdb88195e1c1a5c9959605a1b604082015260600190565b8183823760009101908152919050565b600082516121d4818460208701611d47565b9190910192915050565b6000602082840312156121f057600080fd5b5051919050565b600181811c9082168061220b57607f821691505b60208210810361222b57634e487b7160e01b600052602260045260246000fd5b50919050565b60008184825b85811015612266576001600160a01b0361225083611a25565b1683526020928301929190910190600101612237565b509095945050505050565b60006001600160fb1b0383111561228757600080fd5b8260051b80858437919091019392505050565b815160009082906020808601845b838110156122c4578151855293820193908201906001016122a8565b50929695505050505050565b79024b73b30b634b21039b4b3b732b9171022bc3832b1ba32b21d160351b81526000835161230581601a850160208801611d47565b80830190506501023b7ba1d160d51b601a820152835161232c816020840160208801611d47565b01602001949350505050565b601f821115610e5e57600081815260208120601f850160051c8101602086101561235f5750805b601f850160051c820191505b818110156105a55782815560010161236b565b81516001600160401b0381111561239757612397611c70565b6123ab816123a584546121f7565b84612338565b602080601f8311600181146123e057600084156123c85750858301515b600019600386901b1c1916600185901b1785556105a5565b600085815260208120601f198616915b8281101561240f578886015182559484019460019091019084016123f0565b508582101561242d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fd5b80820281158282048414176103b5576103b561211f565b808201808211156103b5576103b561211f565b60008161248c5761248c61211f565b50600019019056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220dd2eada44715b71a2a674d943898760f1be681650e56b11c2c92408145e4a13764736f6c63430008140033";

type SimpleAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleAccount__factory extends ContractFactory {
  constructor(...args: SimpleAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleAccount__factory {
    return super.connect(runner) as SimpleAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleAccountInterface {
    return new Interface(_abi) as SimpleAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleAccount {
    return new Contract(address, _abi, runner) as unknown as SimpleAccount;
  }
}
