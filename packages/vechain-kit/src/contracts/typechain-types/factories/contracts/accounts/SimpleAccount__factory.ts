/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SimpleAccount,
  SimpleAccountInterface,
} from "../../../contracts/accounts/SimpleAccount";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "uint256[]",
        name: "validAfter",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "validBefore",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "executeBatchWithAuthorization",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "validBefore",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "executeWithAuthorization",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611f046100fd60003960008181610c9601528181610cbf0152610dff0152611f046000f3fe6080604052600436106100c75760003560e01c806301ffc9a7146100d3578063150b7a0214610108578063275573541461014d57806347e1da2a146101625780634f1ef2861461018257806352d1902d1461019557806354fd4d50146101b857806384b0196e146101eb5780638da5cb5b14610213578063ad3cb1cc14610240578063af181edd14610271578063b61d27f614610284578063bc197c81146102a4578063c4d66de8146102d3578063f23a6e61146102f3578063f2fde38b1461032057600080fd5b366100ce57005b600080fd5b3480156100df57600080fd5b506100f36100ee366004611589565b610340565b60405190151581526020015b60405180910390f35b34801561011457600080fd5b50610134610123366004611617565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100ff565b61016061015b366004611685565b610392565b005b34801561016e57600080fd5b5061016061017d366004611765565b6103ed565b610160610190366004611814565b610584565b3480156101a157600080fd5b506101aa6105a3565b6040519081526020016100ff565b3480156101c457600080fd5b506040805180820190915260018152603360f81b60208201525b6040516100ff9190611925565b3480156101f757600080fd5b506102006105c0565b6040516100ff9796959493929190611938565b34801561021f57600080fd5b50600054610233906001600160a01b031681565b6040516100ff91906119ce565b34801561024c57600080fd5b506101de604051806040016040528060058152602001640352e302e360dc1b81525081565b61016061027f3660046119e2565b610669565b34801561029057600080fd5b5061016061029f366004611b1f565b610820565b3480156102b057600080fd5b506101346102bf366004611b78565b63bc197c8160e01b98975050505050505050565b3480156102df57600080fd5b506101606102ee366004611c11565b61086f565b3480156102ff57600080fd5b5061013461030e366004611c2c565b63f23a6e6160e01b9695505050505050565b34801561032c57600080fd5b5061016061033b366004611c11565b6109b0565b60006001600160e01b03198216630a85bd0160e11b148061037157506001600160e01b03198216630271189760e51b145b8061038c57506001600160e01b031982166301ffc9a760e01b145b92915050565b6103a288888888888888886109e2565b6103e3888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bb892505050565b5050505050505050565b6103f5610c2f565b848114801561040b575082158061040b57508281145b6104525760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60008390036105085760005b85811015610502576104f087878381811061047b5761047b611c91565b90506020020160208101906104909190611c11565b60008585858181106104a4576104a4611c91565b90506020028101906104b69190611ca7565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bb892505050565b806104fa81611ced565b91505061045e565b5061057c565b60005b8581101561057a5761056887878381811061052857610528611c91565b905060200201602081019061053d9190611c11565b86868481811061054f5761054f611c91565b905060200201358585858181106104a4576104a4611c91565b8061057281611ced565b91505061050b565b505b505050505050565b61058c610c8b565b61059582610d30565b61059f8282610d3b565b5050565b60006105ad610df4565b50600080516020611eaf83398151915290565b60006060806000806000606060006105d6610e3d565b80549091501580156105ea57506001810154155b61062e5760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610449565b610636610e61565b61063e610f02565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b8a8914801561067757508887145b801561068257508685145b801561068d57508483145b801561069857508281145b6106dd5760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f240d8cadccee8d0e640dad2e6dac2e8c6d60531b6044820152606401610449565b60005b8b811015610811576107aa8d8d838181106106fd576106fd611c91565b90506020020160208101906107129190611c11565b8c8c8481811061072457610724611c91565b905060200201358b8b8581811061073d5761073d611c91565b905060200281019061074f9190611ca7565b8b8b8781811061076157610761611c91565b905060200201358a8a8881811061077a5761077a611c91565b9050602002013589898981811061079357610793611c91565b90506020028101906107a59190611ca7565b6109e2565b6107ff8d8d838181106107bf576107bf611c91565b90506020020160208101906107d49190611c11565b8c8c848181106107e6576107e6611c91565b905060200201358b8b858181106104a4576104a4611c91565b8061080981611ced565b9150506106e0565b50505050505050505050505050565b610828610c2f565b610869848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bb892505050565b50505050565b6000610879610f1f565b805490915060ff600160401b82041615906001600160401b03166000811580156108a05750825b90506000826001600160401b031660011480156108bc5750303b155b9050811580156108ca575080155b156108e85760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b0319166001178555831561091157845460ff60401b1916600160401b1785555b61091a86610f43565b61095b6040518060400160405280600681526020016515d85b1b195d60d21b815250604051806040016040528060018152602001603160f81b815250610f8b565b610963610f9d565b831561057c57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b6109b8610fa5565b6109c0610c2f565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b834211610a2f5760405162461bcd60e51b815260206004820152601b60248201527a105d5d1a1bdc9a5e985d1a5bdb881b9bdd081e595d081d985b1a59602a1b6044820152606401610449565b824210610a765760405162461bcd60e51b8152602060048201526015602482015274105d5d1a1bdc9a5e985d1a5bdb88195e1c1a5c9959605a1b6044820152606401610449565b60007f7032ab04021a3b51f8b532963600986c79192b2787e1b469d2ea7458cf9d8f4489898989604051610aab929190611d14565b604051908190038120610af3949392918a908a906020019586526001600160a01b0394909416602086015260408501929092526060840152608083015260a082015260c00190565b6040516020818303038152906040528051906020012090506000610b1682610ff6565b90506000610b5a8286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102392505050565b6000549091506001600160a01b03808316911614610bab5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b4b3b732b960911b6044820152606401610449565b5050505050505050505050565b600080846001600160a01b03168484604051610bd49190611d24565b60006040518083038185875af1925050503d8060008114610c11576040519150601f19603f3d011682016040523d82523d6000602084013e610c16565b606091505b509150915081610c2857805160208201fd5b5050505050565b6000546001600160a01b03163314610c895760405162461bcd60e51b815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152606401610449565b565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610d1257507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d06600080516020611eaf833981519152546001600160a01b031690565b6001600160a01b031614155b15610c895760405163703e46dd60e11b815260040160405180910390fd5b610d38610fa5565b50565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d95575060408051601f3d908101601f19168201909252610d9291810190611d40565b60015b610db45781604051634c9c8ce360e01b815260040161044991906119ce565b600080516020611eaf8339815191528114610de557604051632a87526960e21b815260048101829052602401610449565b610def838361104d565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c895760405163703e46dd60e11b815260040160405180910390fd5b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10090565b60606000610e6d610e3d565b9050806002018054610e7e90611d59565b80601f0160208091040260200160405190810160405280929190818152602001828054610eaa90611d59565b8015610ef75780601f10610ecc57610100808354040283529160200191610ef7565b820191906000526020600020905b815481529060010190602001808311610eda57829003601f168201915b505050505091505090565b60606000610f0e610e3d565b9050806003018054610e7e90611d59565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090565b600080546001600160a01b0319166001600160a01b038316908117825560405190917fa4f865ec1c93024a9bafa691bc233679a98c0463a09d0a4c5360b91642f3114591a250565b610f936110a3565b61059f82826110c8565b610c896110a3565b6000546001600160a01b0316331480610fbd57503330145b610c895760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606401610449565b600061038c611003611109565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806110338686611118565b9250925092506110438282611165565b5090949350505050565b6110568261121e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561109b57610def828261127a565b61059f6112f0565b6110ab61130f565b610c8957604051631afcd79f60e31b815260040160405180910390fd5b6110d06110a3565b60006110da610e3d565b9050600281016110ea8482611dd9565b50600381016110f98382611dd9565b5060008082556001909101555050565b6000611113611329565b905090565b600080600083516041036111525760208401516040850151606086015160001a6111448882858561139d565b95509550955050505061115e565b50508151600091506002905b9250925092565b600082600381111561117957611179611e98565b03611182575050565b600182600381111561119657611196611e98565b036111b45760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156111c8576111c8611e98565b036111e95760405163fce698f760e01b815260048101829052602401610449565b60038260038111156111fd576111fd611e98565b0361059f576040516335e2f38360e21b815260048101829052602401610449565b806001600160a01b03163b60000361124b5780604051634c9c8ce360e01b815260040161044991906119ce565b600080516020611eaf83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516112979190611d24565b600060405180830381855af49150503d80600081146112d2576040519150601f19603f3d011682016040523d82523d6000602084013e6112d7565b606091505b50915091506112e7858383611462565b95945050505050565b3415610c895760405163b398979f60e01b815260040160405180910390fd5b6000611319610f1f565b54600160401b900460ff16919050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6113546114b8565b61135c61151f565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038411156113ce5750600091506003905082611458565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611422573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661144e57506000925060019150829050611458565b9250600091508190505b9450945094915050565b6060826114775761147282611560565b6114b1565b815115801561148e57506001600160a01b0384163b155b156114ae5783604051639996b31560e01b815260040161044991906119ce565b50805b9392505050565b6000806114c3610e3d565b905060006114cf610e61565b8051909150156114e757805160209091012092915050565b815480156114f6579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b60008061152a610e3d565b90506000611536610f02565b80519091501561154e57805160209091012092915050565b600182015480156114f6579392505050565b8051156115705780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60006020828403121561159b57600080fd5b81356001600160e01b0319811681146114b157600080fd5b80356001600160a01b03811681146115ca57600080fd5b919050565b60008083601f8401126115e157600080fd5b5081356001600160401b038111156115f857600080fd5b60208301915083602082850101111561161057600080fd5b9250929050565b60008060008060006080868803121561162f57600080fd5b611638866115b3565b9450611646602087016115b3565b93506040860135925060608601356001600160401b0381111561166857600080fd5b611674888289016115cf565b969995985093965092949392505050565b60008060008060008060008060c0898b0312156116a157600080fd5b6116aa896115b3565b97506020890135965060408901356001600160401b03808211156116cd57600080fd5b6116d98c838d016115cf565b909850965060608b0135955060808b0135945060a08b013591508082111561170057600080fd5b5061170d8b828c016115cf565b999c989b5096995094979396929594505050565b60008083601f84011261173357600080fd5b5081356001600160401b0381111561174a57600080fd5b6020830191508360208260051b850101111561161057600080fd5b6000806000806000806060878903121561177e57600080fd5b86356001600160401b038082111561179557600080fd5b6117a18a838b01611721565b909850965060208901359150808211156117ba57600080fd5b6117c68a838b01611721565b909650945060408901359150808211156117df57600080fd5b506117ec89828a01611721565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561182757600080fd5b611830836115b3565b915060208301356001600160401b038082111561184c57600080fd5b818501915085601f83011261186057600080fd5b813581811115611872576118726117fe565b604051601f8201601f19908116603f0116810190838211818310171561189a5761189a6117fe565b816040528281528860208487010111156118b357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156118f05781810151838201526020016118d8565b50506000910152565b600081518084526119118160208601602086016118d5565b601f01601f19169290920160200192915050565b6020815260006114b160208301846118f9565b60ff60f81b881681526000602060e08184015261195860e084018a6118f9565b838103604085015261196a818a6118f9565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156119bc578351835292840192918401916001016119a0565b50909c9b505050505050505050505050565b6001600160a01b0391909116815260200190565b60008060008060008060008060008060008060c08d8f031215611a0457600080fd5b6001600160401b038d351115611a1957600080fd5b611a268e8e358f01611721565b909c509a506001600160401b0360208e01351115611a4357600080fd5b611a538e60208f01358f01611721565b909a5098506001600160401b0360408e01351115611a7057600080fd5b611a808e60408f01358f01611721565b90985096506001600160401b0360608e01351115611a9d57600080fd5b611aad8e60608f01358f01611721565b90965094506001600160401b0360808e01351115611aca57600080fd5b611ada8e60808f01358f01611721565b90945092506001600160401b0360a08e01351115611af757600080fd5b611b078e60a08f01358f01611721565b81935080925050509295989b509295989b509295989b565b60008060008060608587031215611b3557600080fd5b611b3e856115b3565b93506020850135925060408501356001600160401b03811115611b6057600080fd5b611b6c878288016115cf565b95989497509550505050565b60008060008060008060008060a0898b031215611b9457600080fd5b611b9d896115b3565b9750611bab60208a016115b3565b965060408901356001600160401b0380821115611bc757600080fd5b611bd38c838d01611721565b909850965060608b0135915080821115611bec57600080fd5b611bf88c838d01611721565b909650945060808b013591508082111561170057600080fd5b600060208284031215611c2357600080fd5b6114b1826115b3565b60008060008060008060a08789031215611c4557600080fd5b611c4e876115b3565b9550611c5c602088016115b3565b9450604087013593506060870135925060808701356001600160401b03811115611c8557600080fd5b6117ec89828a016115cf565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611cbe57600080fd5b8301803591506001600160401b03821115611cd857600080fd5b60200191503681900382131561161057600080fd5b600060018201611d0d57634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b60008251611d368184602087016118d5565b9190910192915050565b600060208284031215611d5257600080fd5b5051919050565b600181811c90821680611d6d57607f821691505b602082108103611d8d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610def57600081815260208120601f850160051c81016020861015611dba5750805b601f850160051c820191505b8181101561057c57828155600101611dc6565b81516001600160401b03811115611df257611df26117fe565b611e0681611e008454611d59565b84611d93565b602080601f831160018114611e3b5760008415611e235750858301515b600019600386901b1c1916600185901b17855561057c565b600085815260208120601f198616915b82811015611e6a57888601518255948401946001909101908401611e4b565b5085821015611e885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220e327168553e4fc8ace986e1c5d82cc14db9e838517fda767199fe8a422ef0eb864736f6c63430008140033";

type SimpleAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleAccount__factory extends ContractFactory {
  constructor(...args: SimpleAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleAccount__factory {
    return super.connect(runner) as SimpleAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleAccountInterface {
    return new Interface(_abi) as SimpleAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleAccount {
    return new Contract(address, _abi, runner) as unknown as SimpleAccount;
  }
}
