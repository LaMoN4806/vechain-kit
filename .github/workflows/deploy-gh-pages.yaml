# Simple workflow for deploying static content to GitHub Pages
name: Deploy to GitHub Pages

on:
    # Runs on pushes targeting the default branch
    push:
        branches: ['main']

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write
    packages: write

# Allow one concurrent deployment
concurrency:
    group: 'pages'
    cancel-in-progress: true

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            BASE_PATH: ''
            NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID }}
            NEXT_PUBLIC_PRIVY_APP_ID: ${{ secrets.NEXT_PUBLIC_PRIVY_APP_ID }}
            NEXT_PUBLIC_PRIVY_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_PRIVY_CLIENT_ID }}
            NEXT_PUBLIC_DELEGATOR_URL: ${{ secrets.NEXT_PUBLIC_DELEGATOR_URL }}
            NEXT_PUBLIC_NETWORK_TYPE: 'main'
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Build App
              env:
                  NODE_OPTIONS: '--max-old-space-size=8192'
              run: |
                  yarn install:all
                  yarn build

            - name: Fix permissions
              run: |
                  chmod -c -R +rX "./examples/homepage/dist" | while read line; do
                    echo "::warning title=Invalid file permissions automatically fixed::$line"
                  done

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: './examples/homepage/dist'

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ secrets.AWS_ACC_ROLE }}
                  aws-region: eu-west-1

            - name: Deploy to S3
              run: |
                  aws s3 sync ./examples/homepage/dist s3://${{ secrets.AWS_BUCKET_NAME }} --delete

            - name: Cloudfront Invalidation
              run: |
                  AWS_MAX_ATTEMPTS=10 aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths '/' '/*'
